CREATE TABLE TBL_FLOWER(
	FLOWER_NAME VARCHAR2(1000),
	FLOWER_COLOR VARCHAR2(1000),
	FLOWER_PRICE NUMBER,
	CONSTRAINT PK_FLOWER PRIMARY KEY(FLOWER_NAME, FLOWER_COLOR)
);

INSERT INTO TBL_FLOWER
VALUES('장미', '검정', 5000);

INSERT INTO TBL_FLOWER
VALUES('장미', '빨강', 5000);

INSERT INTO TBL_FLOWER
VALUES('튤립', '빨강', 4500);

INSERT INTO TBL_FLOWER
VALUES('장미', '검정', 5000); --오류! 조합키 2개의 컬럼이 모두 일치함

SELECT * FROM TBL_FLOWER;

--=============================================================================

CREATE TABLE TBL_PHONE(
	PHONE_SERIAL_NUMBER VARCHAR2(500),
	PHONE_COLOR VARCHAR2(500),
	PHONE_SIZE NUMBER,
	PHONE_PRICE NUMBER,
	PHONE_PRODUCTION_DATE DATE,
	PHONE_SALE NUMBER,
	CONSTRAINT PK_PHONE PRIMARY KEY(PHONE_SERIAL_NUMBER)
);

CREATE TABLE TBL_CASE(
   CASE_SERIAL_NUMBER VARCHAR2(500),
   CASE_COLOR VARCHAR2(500),
   CASE_PRICE NUMBER,
   PHONE_SERIAL_NUMBER VARCHAR2(500),
   CONSTRAINT PK_CASE PRIMARY KEY(CASE_SERIAL_NUMBER),
   CONSTRAINT FK_CASE FOREIGN KEY(PHONE_SERIAL_NUMBER)
   REFERENCES TBL_PHONE(PHONE_SERIAL_NUMBER)
);

--=============================================================================
DROP TABLE TBL_MEMBER;
DROP TABLE TBL_BOOK;

CREATE TABLE TBL_MEMBER(
	MEMBER_NUMBER NUMBER,
	MEMBER_NAME VARCHAR2(500),
	MEMBER_AGE NUMBER,
	MEMBER_PHONE_NUMBER NUMBER,
	MEMBER_ADDRESS VARCHAR2(500),
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_NUMBER)
);

CREATE TABLE TBL_BOOK(
	BOOK_NUMBER NUMBER,
	BOOK_NAME VARCHAR2(500),
	BOOK_GENRE VARCHAR2(500) CONSTRAINT CHECK_GENRE CHECK(BOOK_GENRE IN('인문학', '추리', 'IT', '로맨스')),
	MEMBER_NUMBER NUMBER,
	CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_NUMBER),
	CONSTRAINT FK_BOOK FOREIGN KEY(MEMBER_NUMBER)
	REFERENCES TBL_MEMBER(MEMBER_NUMBER)
);


SELECT * FROM TBL_BOOK;

-- 류호근 강사가 풀어본 모델링 실습 결과물
DROP TABLE TBL_MEMBER;
DROP TABLE TBL_BOOK;

CREATE TABLE TBL_MEMBER(
   MEMBER_ID NUMBER,
   MEMBER_NAME VARCHAR2(500) NOT NULL,
   MEMBER_AGE NUMBER NOT NULL,
   MEMBER_PHONE VARCHAR2(500) NOT NULL,
   MEMBER_ADDRESS VARCHAR2(500) NOT NULL,
   CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID),
   CONSTRAINT UK_MEMBER UNIQUE(MEMBER_PHONE)
);

CREATE TABLE TBL_BOOK(
   BOOK_ID NUMBER,
   BOOK_NAME VARCHAR2(500) NOT NULL,
   BOOK_GENRE VARCHAR2(500),
   MEMBER_ID NUMBER,
   CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_ID),
   CONSTRAINT FK_BOOK FOREIGN KEY(MEMBER_ID)
   REFERENCES TBL_MEMBER(MEMBER_ID),
   CHECK(BOOK_GENRE IN ('인문학', '추리', 'IT', '로맨스'))
);

--관계를 맺은 테이블 들의 DML
SELECT * FROM TBL_PHONE;
SELECT * FROM TBL_CASE;

INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('I13-001', 'BLUE', 8, 240, '2021-02-11', 0);
--DATE 타입의 컬럼에 문자타입의 값을 'YYYY-MM-DD'의 형태로 넣으면
--자동으로 DATE 타입으로 변환되어 들어간다.

INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('I13-002', 'BLUE', 8, 240, SYSDATE, 0);

INSERT INTO TBL_PHONE
(PHONE_SERIAL_NUMBER, PHONE_COLOR, PHONE_SIZE, PHONE_PRICE, PHONE_PRODUCTION_DATE, PHONE_SALE)
VALUES('I13-003', 'BLACK', 8, 240, '2023/02/15', 0);

INSERT INTO HR.TBL_CASE
(CASE_SERIAL_NUMBER, CASE_COLOR, CASE_PRICE, PHONE_SERIAL_NUMBER)
VALUES('ABC', 'BLACK', 10000, 'I13-004');--오류 부모에 없는 값을 참조함

INSERT INTO HR.TBL_CASE
(CASE_SERIAL_NUMBER, CASE_COLOR, CASE_PRICE, PHONE_SERIAL_NUMBER)
VALUES('ABC', 'BLACK', 10000, 'I13-001');

INSERT INTO HR.TBL_CASE
(CASE_SERIAL_NUMBER, CASE_COLOR, CASE_PRICE, PHONE_SERIAL_NUMBER)
VALUES('DEF', 'WHITE', 8000, 'I13-002');

SELECT * FROM TBL_PHONE;
SELECT * FROM TBL_CASE;